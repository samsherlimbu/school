// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url      = env("DATABASE_URL")
}
model School {
  id String @id @default(cuid()) // or use @default(uuid()) for UUID
  name      String
  logo      String?
  slug String @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
model Contact {
  id         String   @id @default(cuid())
  fullName   String
  email      String   @unique
  phone      String
  school     String   @unique
  country    String
  schoolPage String
  students   Int
  role       String
  media      String
  message    String   @db.Text // Using Text for potentially longer messages
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("contacts")

 
}
model Class {
  id        String    @id @default(cuid())
  title     String
  slug      String    @unique
  streams   Stream[]
  students Student[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("classes")
}

model Stream {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  classId   String
  class     Class    @relation(fields: [classId], references: [id])
  students Student[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("streams")
}

model Parent {
  id                          String   @id @default(cuid())
  ParentName                 String
  email                      String   @unique
  relationShip              String
  NIN                        String   @unique
  gender                     String
  dob                        DateTime
  state                      String
  occupation                 String
  address                    String
  preferenceContactMethod    String
  password                   String
  phone                      String @unique
  imageUrl                   String?  // optional
  country                    String
  students                   Student[]
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  @@map("parents")
}


model Student {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String
  phone         String
  dob           String
  state         String
  rollNo        String   @unique
  regNo         String   @unique
  admissionDate String
  gender        String
  imageUrl      String?  // optional
  country       String
  description   String

  parentId      String
  classId       String
  streamId      String // renamed from sectionId

  parentName    String?
  classTitle    String?
  streamTitle    String?

  parent        Parent   @relation(fields: [parentId], references: [id])
  class         Class    @relation(fields: [classId], references: [id])
  stream        Stream   @relation(fields: [streamId], references: [id]) // renamed from section

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("students")
}
